{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"How to get a Linux game on Steam","text":"<p>This website consists of my notes on how to get a game on Steam</p> <ul> <li>Create an executable</li> <li>Uploading your game</li> </ul>"},{"location":"CODE_OF_CONDUCT/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at rjcbilderbeek@gmail.com. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>Thanks for considering to contribute and reading this!</p> <p>Here we discuss how to contribute</p> <ul> <li>Spoken text, e.g. ideas, feedback, messages, etc.   and are written in English.</li> <li>Code, e.g. textual changes where the text is formatted in Markdown</li> </ul>"},{"location":"CONTRIBUTING/#spoken-text","title":"Spoken text","text":"<p>Spoken text are ideas, feedback, messages, etc. and are written in English.</p> <p>For ideas or feedback, create an Issue. These Issues will be discussed in a meeting and/or below that Issue.</p> <p>Ideas that improve the experience of our visitors will likely be accepted.</p>"},{"location":"CONTRIBUTING/#code","title":"Code","text":"<p>We welcome any contribution that:</p> <ul> <li>improves the experience of our visitors</li> <li>follow all standards set by the continuous integration tools   (e.g. use 4 spaces for indentation)</li> </ul>"},{"location":"create_an_executable/","title":"How to create an executable","text":"<p>An executable is a file that can be run.</p> <p>There are multiple options:</p> <ul> <li><code>[1]</code> Create a Linux executable</li> <li><code>[2]</code> Create a standalone Linux executable</li> <li><code>[3]</code> Create a Linux executable using the SteamSDK</li> <li><code>[4]</code> Create a Windows executable using AppVeyor</li> <li><code>[5]</code> Create a Windows executable using a cross-compiler</li> </ul> Option Advantage Disadvantage <code>[1]</code> Linux executable Easiest Users will need to install libraries themselves or (?) you need to supply the <code>.so</code> files. Users will need to set up the launch options of your game <code>[2]</code> Standalone Linux executable Can be run on own computer A static compilation takes more time, harder to setup. Users will need to set up the launch options of your game <code>[3]</code> Linux executable, SteamSDK Can be run on own computer One needs to learn the SteamSDK, harder to setup <code>[4]</code> Windows executable, AppVeyor Most gamers use Windows, no installation needed AppVeyor script development involves a lot of waiting <code>[5]</code> Windows executable, cross-compiler Most gamers use Windows, can be run on own computer A cross-compilation takes more time, harder to setup"},{"location":"create_an_executable/#1-linux-executable","title":"<code>[1]</code> Linux executable","text":"<p>This is the easiest way, to just upload your Linux executable.</p> <p>These are the problems:</p> <ul> <li>The user must have all needed libraries   (i.e. the things you install with <code>sudo apt-get install my_library</code>):   installed.   If the user is missing libraries   the game will crash at startup,   without a proper error message</li> <li>The user must use the 'Legacy runtime 1.0' launcher,   which can be set in the properties of the Steam page of your game.</li> </ul> <p>One solution for this is to create a web page on how to do so: you can find an example documentation page on how to launch a game on Steam using this method.</p> <p>Tested to fail solution: provide the shared object files</p> <p>A tested to fail solution is to provide the needed libraries alongside the game executable, i.e. to upload the executable with all shared objects (<code>.so</code>) needed.</p> <p>Here is an example, where a folder is show to contain an executable called <code>conquer_chess</code>, as well as the <code>.so</code> files it needs. However, the executables do not find the <code>.so</code> files in the same folder.</p> <p></p> <pre><code>richel@richel-IdeaPad-1-14IGL7:~/snap/steam/common/.local/share/Steam/steamapps/common/conquer_chess$ ls\nconquer_chess            libsfml-graphics.so.2.6.1  libsfml-system.so.2.6.1\nlibsfml-audio.so         libsfml-network.so         libsfml-window.so\nlibsfml-audio.so.2.6     libsfml-network.so.2.6     libsfml-window.so.2.6\nlibsfml-audio.so.2.6.1   libsfml-network.so.2.6.1   libsfml-window.so.2.6.1\nlibsfml-graphics.so      libsfml-system.so\nlibsfml-graphics.so.2.6  libsfml-system.so.2.6\nrichel@richel-IdeaPad-1-14IGL7:~/snap/steam/common/.local/share/Steam/steamapps/common/conquer_chess$ ./conquer_chess \n./conquer_chess: error while loading shared libraries: libsfml-graphics.so.2.6: cannot open shared object file: No such file or directory\n</code></pre>"},{"location":"create_an_executable/#2-standalone-linux-executable","title":"<code>[2]</code> Standalone Linux executable","text":"<p>The idea is to compile the Linux executable in such a way that it is a standalone file.</p> <p>These are the problems:</p> <ul> <li>You must create that standalone file</li> <li>The user must use the 'Legacy runtime 1.0' launcher,   which can be set in the properties of the Steam page of your game.</li> </ul> <p>To create a standalone file may be hard. In C++, this can be done by so-called static compilations. It can be hard to set this up and compilation will take a long time.</p> <p>To solve the problem for the user, one solution is to create a web page on how to do so: you can find an example documentation page on how to launch a game on Steam using this method.</p> <p>Untested solution: create a Debian file?</p> <p>Maybe creating a Debian (<code>.deb</code>) file is a good way to do so?</p> <p>Untested solution: use Flatpak?</p> <p>Maybe using Flatpak file is a good way to do so?</p> <p>Based on the documentation of the basic concepts of Flatpak, this seems to result in a standalone executable.</p>"},{"location":"create_an_executable/#3-linux-executable-steamsdk","title":"<code>[3]</code> Linux executable, SteamSDK","text":"<p>TODO</p>"},{"location":"create_an_executable/#4-windows-executable-appveyor","title":"<code>[4]</code> Windows executable, AppVeyor","text":"<p>Using a Continuous Integration (CI) service that runs on Windows, such as AppVeyor, one can create a Windows executable on a remote computer from a script. In the end, the script should allow you to download the Windows executable.</p> <p>Unsure how that needs to be launched by the user.</p>"},{"location":"create_an_executable/#5-windows-executable-cross-compiler","title":"<code>[5]</code> Windows executable, cross-compiler","text":"<p>Using a crosscompiler, such as MXE for C++, allows one to create a (standalone) Windows executable.</p> <p>Unsure how that needs to be launched by the user.</p>"},{"location":"uploading_your_game/","title":"How to upload your game","text":"Prefer a video? <p>Then watch the YouTube video How to upload your Linux game to Steam, which goes through this same content and shows how this looks like.</p> <p>You want to upload your game (and optionally some more files that it needs).</p> <p>There are these options:</p> <ul> <li><code>[1]</code> Use a zip file and upload</li> <li><code>[2]</code> Create a zip file from a script and upload</li> <li><code>[3]</code> Use <code>steamcmd</code> and some Valve Data Format (<code>.vdf</code>) files</li> </ul> <p>Here is a comparison of the features of these approaches:</p> Option Advantages Disadvantages <code>[1]</code> Use a zip file Easiest to do Clumsy, manual steps, does not scale with more complex games <code>[2]</code> Create a zip file from a script Allows scripting Still requires manual steps <code>[3]</code> Use <code>steamcmd</code> Allows scripting Need to install and learn <code>steamcmd</code> and the VDF format <p>Here is a decision tree:</p> <pre><code>flowchart TD\n\n  question_basic_bash[Can you do basic bash scripting?]\n  question_steamcmd[Can you get steamcmd to work?]\n\n  question_basic_bash --&gt; |No| use_zip[1.Use a zip file]\n  question_basic_bash --&gt; |Yes| question_steamcmd\n  question_steamcmd --&gt; |No| use_zip_scripts[2.Create a zip file from script]\n  question_steamcmd --&gt; |Yes| use_steamcmd[3.Use steamcmd]</code></pre>"},{"location":"uploading_your_game/#1-use-a-zip-file-and-upload","title":"<code>[1]</code> Use a zip file and upload","text":"<p>This option only involves clicking in the right places.</p> <ul> <li>Zip your game files in your file explorer</li> <li>Upload the zip file on Steamworks</li> </ul>"},{"location":"uploading_your_game/#2-create-a-zip-file-from-a-script-and-upload","title":"<code>[2]</code> Create a zip file from a script and upload","text":"<p>This option involves writing and running a script to create a zip file, then clicking to upload it.</p> <ul> <li>Write a script to zip the game files</li> <li>Run the script to zip the game files</li> <li>Upload the zip file on Steamworks</li> </ul> <p>This script can be very simple. Below is a Bash script that zips the executable called <code>my_game</code> to a zip file called <code>my_game.zip</code>.</p> <pre><code>#!/bin/bash\nzip my_game.zip my_game\n</code></pre>"},{"location":"uploading_your_game/#3-use-steamcmd-and-some-valve-data-format-vdf-files","title":"<code>[3]</code> Use <code>steamcmd</code> and some Valve Data Format (<code>.vdf</code>) files","text":"<p>This option involves writing Valve Data Format files (these are the files in which you state the location of your game files) and then using <code>steamcmd</code> to upload the files.</p> <ul> <li>Write the <code>.vdf</code> files, which are 1 <code>AppBuild</code> file   and 1 or more <code>DepotBuild</code> files</li> </ul> Could you give an example <code>AppBuild</code> file? <p>Below is an example <code>AppBuild</code> file. It assumes that there is a <code>DepotBuild</code> file called <code>depot_build_3873941.vdf</code>.</p> <pre><code>\"AppBuild\"\n{\n  \"AppID\" \"3873940\" // your AppID\n  \"Desc\" \"My first VDF files\" // internal description for this build\n\n  \"ContentRoot\" \".\" // root content folder, relative to location of this file\n  \"BuildOutput\" \".\" // build output folder for build logs and build cache files\n\n  \"Depots\"\n  {\n    // file mapping instructions for each depot are in separate script files\n    \"3873941\" \"depot_build_3873941.vdf\"\n  }\n}\n</code></pre> Could you give an example <code>DepotBuild</code> file? <p>Below is an example <code>DepotBuild</code> file. To be able to work together with the example <code>AppBuild</code> file, this file must be called <code>depot_build_3873941.vdf</code>:</p> <pre><code>\"DepotBuild\"\n{\n    \"DepotID\" \"3873941\"\n    \"ContentRoot\" \"../\"\n\n    \"FileMapping\"\n    {\n        \"LocalPath\" \"conquer_chess\"\n        \"DepotPath\" \".\"\n        \"Recursive\" \"1\"\n    }\n    \"FileExclusion\" \"*.png\"\n    \"FileExclusion\" \"*.ogg\"\n    \"FileExclusion\" \"*.jpg\"\n    \"FileExclusion\" \"*.ttf\"\n    \"FileExclusion\" \"*.txt\"\n    \"FileExclusion\" \"*.csv\"\n}\n</code></pre> <ul> <li>Install <code>steamcmd</code> from   the Valve developer community website</li> <li>In <code>steamcmd</code>, run <code>login</code> to login</li> <li>Run <code>run_app_build my_app_build.vdf</code> to upload the files</li> </ul>"},{"location":"launch_on_steam/","title":"Launch on Steam","text":"<p>This is an example</p> <p>This is an example page on how a game may document what a user needs to do to launch a game.</p> <p>The example game used is called Conquer Chess, which is a FOSS game developed under Linux in C++.</p> <p>Conquer Chess does not launch out of the box yet. This is being worked on.</p> <p>For now, here are the steps to launch Conquer Chess on Steam.</p> Prefer a video? <p>Then watch the YouTube video Conquer Chess: how to launch from Steam and report a bug</p>"},{"location":"launch_on_steam/#0-install-the-dependencies","title":"0. Install the dependencies","text":"<p>Conquer Chess is not yet provided as a stand-alone Linux executable. For now, these libraries must be installed by the user :-/</p> <p>In a terminal, install the Qt and SFML libraries:</p> <pre><code>sudo apt install libqt6core6t64 libqt6gui6t64 libqt6widgets6t64 libsfml-* \n</code></pre> <p>This is only partially tested on Ubuntu 24.04 LTS and is not tested on other Linux distributions.</p>"},{"location":"launch_on_steam/#1-click-on-manage","title":"1. Click on 'Manage'","text":"<p>In Steam, go to 'Conquer Chess' in your Steam Library and click on 'Manage'.</p> <p></p>"},{"location":"launch_on_steam/#2-click-on-properties","title":"2. Click on 'Properties'","text":"<p>In the 'Manage' pop-up menu, click on 'Properties'</p> <p></p>"},{"location":"launch_on_steam/#3-activate-legacy-runtime-10","title":"3. Activate 'Legacy runtime 1.0'","text":"<p>In the 'Properties dialog', go the 'Compatibility' tab and force the use of 'Legacy runtime 1.0':</p> <p></p>"},{"location":"launch_on_steam/#4-play-conquer-chess","title":"4. Play Conquer Chess","text":"<p>Click on 'Play' to start Conquer Chess.</p> <p>If nothing happens, try to run the game from the terminal:</p> <pre><code>cd ~/.local/share/Steam/steamapps/common/conquer_chess\n./conquer_chess\ncat conquer_chess_error.txt\n</code></pre> <p>Please report a bug with the error messages.</p>"}]}